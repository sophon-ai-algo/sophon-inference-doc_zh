Python Samples (Algokit)
========================

The programs in this chapter are based on the Python interface of SAIL.
If you want to see what python interfaces SAIL provides,
you can refer to the source file: src/bind.cpp.

This section provides programs for model deployment using both the Algokit module and the SAIL's python interfaces directly.

Using SAIL's python interfaces
______________________________

**yolov3**

Deploy yolov3 (caffe) to the TPU.
Detect a single image.

    .. code-block:: shell

       # Dowload and convert model
       python3 ./tools/download_and_convert.py yolov3

       # Drive TPU to reason
       python3 ./samples/python/run_yolov3.py \
           --ir_path $HOME/.sophon/models/yolov3_ir/ \
           --input_path $HOME/.sophon/data/det_2.jpg


Using Algokit module
____________________

**Image Classification**

googlenet (caffe)
    .. code-block:: shell

       # Download and Convert model
       python3 ./tools/download_and_convert.py googlenet

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type cls \
           --algo_name googlenet \
           --input_path $HOME/.sophon/data/cls_imgs/cls_1.jpg

resnet50 (caffe)
    .. code-block:: shell

       # Download and Convert model
       python3 ./tools/download_and_convert.py resnet50

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type cls \
           --algo_name resnet50 \
           --input_path $HOME/.sophon/data/cls_imgs/cls_1.jpg

mobilenetv1 (caffe)
    .. code-block:: shell

       # Download and convert 
       python3 ./tools/download_and_convert.py mobilenetv1

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type cls \
           --algo_name mobilenetv1 \
           --input_path $HOME/.sophon/data/cls_imgs/cls_1.jpg

vgg16 (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py vgg16

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type cls \
           --algo_name vgg16 \
           --input_path $HOME/.sophon/data/cls_imgs/cls_1.jpg

mobilenetv1 (tensorflow)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py mobilenetv1_tf

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type cls \
           --algo_name mobilenetv1_tf \
           --input_path $HOME/.sophon/data/cls_imgs/cls_1.jpg

**Object Detection**

yolov3 (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py yolov3

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type obj_det \
           --algo_name yolov3 \
           --input_path $HOME/.sophon/data/det_2.jpg

mobilenetyolov3 (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py mobilenetyolov3

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type obj_det \
           --algo_name mobilenetyolov3 \
           --input_path $HOME/.sophon/data/det_2.jpg

mobilenetssd (caffe)
    .. code-block:: shell

       # Download and convert
       python3 ./tools/download_and_convert.py mobilenetssd

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type obj_det \
           --algo_name mobilenetssd \
           --input_path $HOME/.sophon/data/det_1.jpg

fasterrcnn_vgg16 (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py fasterrcnn_vgg

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type obj_det \
           --algo_name fasterrcnn_vgg \
           --input_path $HOME/.sophon/data/det_1.jpg

fasterrcnn_resnet50 (tensorflow)

    .. code-block:: shell

       # The deployment of this model uses the AutoDeploy module, so the first step is to download only the model.
       # The automatic dividing, compilation and execution of the model are performed in the second step.

       # Download model
       python3 ./tools/download_and_convert.py fasterrcnn_resnet50_tf

       # Using Autodeploy
       python3 ./samples/python/run_algokit.py \
           --algo_type obj_det \
           --algo_name fasterrcnn_resnet50_tf \
           --input_path $HOME/.sophon/data/det_1.jpg

**Face Detection**

mtcnn (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py mtcnn

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type face_det \
           --algo_name mtcnn \
           --input_path $HOME/.sophon/data/face_1.jpg

ssh (caffe)
    .. code-block:: shell

       # Download and convert model
       python3 ./tools/download_and_convert.py ssh

       # Drive TPU to reason
       python3 ./samples/python/run_algokit.py \
           --algo_type face_det \
           --algo_name ssh \
           --input_path $HOME/.sophon/data/face_1.jpg

**Image Segmentation**

deeplabv3 (tensorflow)

    .. code-block:: shell

       # The deployment of this model uses the AutoDeploy module, so the first step is to download only the model.
       # The automatic dividing, compilation and execution of the model are performed in the second step.

       # Download model
       python3 ./tools/download_and_convert.py deeplabv3_mobilenetv2_tf

       # Using Autodeploy
       python3 ./samples/python/run_algokit.py \
           --algo_type seg \
           --algo_name deeplabv3_mobilenetv2_tf \
           --input_path $HOME/.sophon/data/seg_1.jpg

